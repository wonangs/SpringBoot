<div id = "comments-list"> <!-- ----------------------------- ➊ 댓글 목록 영역 설정 -->
	{{#commentDtos}} <!-- --------------------------------- ➋ 댓글 목록 순회 -->

		<!--➌ 댓글 카드 만들고 id 부여-->


		<div class = "card m-2" id = "comments-{{id}}">

			<!--➍ 댓글 헤더 영역 설정-->
			<div class = "card-header">
				{{nickname}} <!----- ➊ 닉네임 보여 주기-->
				<!-- 수정 버튼을 넣을 위치-->
				<!-- Button trigger modal -->
				<button type = "button"
				        class = "btn btn-sm btn-outline-primary"
				        data-bs-toggle = "modal"
				        data-bs-target = "#comment-edit-modal"
				        data-bs-id = "{{id}}"
				        data-bs-nickname = "{{nickname}}"
				        data-bs-body = "{{body}}"
				        data-bs-article-id = "{{articleId}}">
					수정
				</button>

				<!--댓글 삭제 버튼-->
				<button type = "button"
				        class = "btn btn-sm btn-outline-danger comment-delete-btn" data-comment-id = "{{id}}">삭제
				</button>
			</div>
			

			<!--➍ 댓글 헤더 영역 설정-->
			<div class = "card-body">
				{{body}} <!--------- ➋ 댓글 본문 보여 주기-->
			</div>

		</div>

	{{/commentDtos}}
</div>

<!-- Modal -->
<div class = "modal fade" id = "comment-edit-modal" tabindex = "-1"><!-- id 변경-->
	<!--aria-labelledby = "exampleModalLabel" aria-hidden = "true">--> <!--속성 삭제-->
	<div class = "modal-dialog">
		<div class = "modal-content">
			<div class = "modal-header">
				<h5 class = "modal-title fs-5"
				    id = "exampleModalLabel">댓글 수정</h5> <!--모달 제목 변경-->
				<button type = "button"
				        class = "btn-close"
				        data-bs-dismiss = "modal"
				        aria-label = "Close"></button>
			</div>
			<div class = "modal-body">

				<!--댓글 수정 폼--> <!--주석 추가-->
				<form>
					<!-- 닉네임 입력 -->
					<div class = "mb-3">
						<label class = "form-label">닉네임</label>
						<input type = "text" class = "form-control"
						       id = "edit-comment-nickname"> <!--id 수정-->
					</div>

					<!-- 댓글 본문 입력 -->
					<div class = "mb-3">
						<label class = "form-label">댓글 내용</label>
						<textarea type = "text" class = "form-control" rows = "3"
						          id = "edit-comment-body"></textarea> <!--id 수정-->
					</div>

					<!-- 히든 인풋 요소 정의-->
					<input type = "hidden" id = "edit-comment-id">

					<!-- 히든 인풋 요소 정의-->
					<input type = "hidden" id = "edit-comment-article-id">

					<!-- 전송 버튼 -->
					<button type = "button" class = "btn btn-primary"
					        id = "comment-update-btn">수정 완료 <!--id, 제목 수정-->
					</button>
				</form>
			</div>
			<!--<div class = "modal-footer">
				<button type = "button"
				        class = "btn btn-secondary"
				        data-bs-dismiss = "modal">Close
				</button>
				<button type = "button"
				        class = "btn btn-primary">Save changes
				</button> &lt;!&ndash;close, save changes 버튼 삭제&ndash;&gt;
			</div>-->
		</div>
	</div>
</div>

<script>
	{
		// 모달 요소 선택
		const commentEditModal = document.querySelector("#comment-edit-modal");

		// 모달 이벤트 감지
		commentEditModal.addEventListener("show.bs.modal", function (event) {

			// 1. 트리거 버튼 선택
			const triggerBtn = event.relatedTarget;

			// 2. 데이터 가져오기
			const id = triggerBtn.getAttribute("data-bs-id"); /*---------------- ➊ id 가져오기*/
			const nickname = triggerBtn.getAttribute("data-bs-nickname"); /*---- ➋ 닉네임 가져오기*/
			const body = triggerBtn.getAttribute("data-bs-body"); /*------------ ➌ 본문 가져오기*/
			const articleId = triggerBtn.getAttribute("data-bs-article-id"); /*- ➍ 부모 id 가져오기*/

			// 3. 수정 폼에 데이터 반영
			document.querySelector("#edit-comment-nickname").value = nickname; /*- ➊ 닉네임 반영*/
			document.querySelector("#edit-comment-body").value = body; /*--------- ➋ 댓글 본문 반영*/
			document.querySelector("#edit-comment-id").value = id; /*------------- ➌ id 반영*/
			document.querySelector("#edit-comment-article-id").value = articleId; /*- ➍ 부모 id 반영*/
		});
	}

	{
		// 수정 완료 버튼 선택
		const commentUpdateBtn = document.querySelector("#comment-update-btn");

		// 클릭 이벤트 처리
		commentUpdateBtn.addEventListener("click", function () {

			// 수정 댓글 객체 생성
			const comment = { /*------- ➊ 객체 변수 선언*/
				id: document.querySelector("#edit-comment-id").value,
				nickname: document.querySelector("#edit-comment-nickname").value,
				body: document.querySelector("#edit-comment-body").value,
				article_id: document.querySelector("#edit-comment-article-id").value
			};
			console.log(comment); /*--- ➋ 객체 생성 확인*/

			// 수정 REST API 호출
			const url = "/api/comments/" + comment.id;

			fetch(url, { /*------ ➊~➋ fetch() 함수 작성*/

				method: "PATCH", // PATCH 요청
				headers: {       // 전송 데이터 타입(JSON) 정보
					"Content-Type": "application/json"
				},
				body: JSON.stringify(comment) //comment 객체를 JSON 문자열로 변환 전송
			}).then(response => {

				// HTTP 응답 코드에 따른 메시지 출력
				const msg = (response.ok) ? "댓글이 수정됐습니다." : "댓글 수정 실패..!"; /*- ➊ 응답 처리*/
				alert(msg);

				// 현재 페이지 새로 고침
				window.location.reload(); /*--- ➋ 새로 고침*/
			});
		});
	}
</script>

<!-- 댓글 삭제 -->
<script>
	{
		// 삭제 버튼 선택
		// 처음 나온 삭제 버튼에만 적용되는 문제 발생
		/*const commentDeleteBtn = document.querySelector(".comment-delete-btn");*/
		// 선택자로 지정한 모든 요소를 찾아 반환하는 메서드로 문제 해결
		const commentDeleteBtns = document.querySelectorAll(".comment-delete-btn");

		// 삭제 버튼 이벤트 처리
		// commentDeleteBtn.addEventListener("click", function () {
		// 	console.log("삭제 버튼이 클릭됐습니다..!");
		// });

		commentDeleteBtns.forEach(btn => { /*-------------------------- ➋ [삭제] 버튼 수만큼 반복*/
			btn.addEventListener("click", (event) => { /*----------- ➊ event 객체 받아 오기*/

				// 이벤트 발생 요소 선택
				const commentDeleteBtn = event.target; /*------------- ➋ [삭제] 버튼 변수화*/

				// 삭제 댓글 id 가져오기
				const commentId = commentDeleteBtn.getAttribute("data-comment-id"); /*---➌ id 가져오기*/
				console.log(`삭제 버튼 클릭: ${commentId}번 댓글`); /*--- ➍ 콘솔 로그 출력*/

				// 삭제 REST API 호출
				const url = `/api/comments/${commentId}`;
				fetch(url, { /*------------ ➊~➋ fetch() 함수 작성*/
					method: "DELETE"
				}).then(response => { /*--- ➌~➎ 응답 처리(실패 시, 성공 시)*/

					// 댓글 삭제 실패 처리
					if (!response.ok) {
						alert("댓글 삭제 실패..!");
						return;
					}

					// 삭제 성공 시 댓글을 화면에서 지우고 메시지 창 띄우기
					const target = document.querySelector(`#comments-${commentId}`);
					target.remove();
					const msg = `${commentId}번 댓글을 삭제했습니다.`;
					alert(msg);

					// 현재 페이지 새로 고침
					window.location.reload();
				});
			});
		});
	}
</script>